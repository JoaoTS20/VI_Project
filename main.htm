<!DOCTYPE html>
<meta charset="utf-8">
          
<!-- Load d3.js -->
<script src="http://d3js.org/d3.v6.js"></script>
<link rel="stylesheet" href="choropleth.css">
<html>
    <!-- Create an element where the map will take place -->
    <div class="container">
        <h2>Movie Production Geographic Distribution</h2>
        <div class="radarChart">
          <svg id="my_dataviz" width="500" height="400"></svg>
          <button type="button" class="btn btn-secondary">All Time</button>
          <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-group mr-2" role="group" aria-label="First group">
              <button type="button" class="btn btn-secondary">1920s</button>
              <button type="button" class="btn btn-secondary">1930s</button>
              <button type="button" class="btn btn-secondary">1940s</button>
              <button type="button" class="btn btn-secondary">1950s</button>
              <button type="button" class="btn btn-secondary">1960s</button>
              <button type="button" class="btn btn-secondary">1970s</button>
              <button type="button" class="btn btn-secondary">1980s</button>
              <button type="button" class="btn btn-secondary">1990s</button>
              <button type="button" class="btn btn-secondary">2000s</button>
              <button type="button" class="btn btn-secondary">2010s</button>
            </div>
          </div>
        </div>

        <div class="filters">
          Top 10 Producers 
          <table id="table_producers" border="1px solid black"></table>
        </div>
    </div>
</html>
<script>    
    // Data and color scale
    let data = new Map();
    let table=document.getElementById( 'table_producers' );
    const countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);
    d3.csv("dataset.csv").then(function(d) {
        countries=[]
        d.forEach(element => {eval(element.production_countries).forEach(cou => {countries.push(cou)})});
        cout_set=new Set(countries)
        cout_set.forEach(country => {data.set(country,countOccurrences(countries,country))})
        console.log(data)
        //Make Table
        var header = table.createTHead();
        var top10_countrys= new Map( Array.from( new Map([...data.entries()].sort((a, b) => a[1] - b[1])) ).slice(-10))
        //Add Top 10 Countries
        top10_countrys.forEach((values,keys)=>{
          row = table.insertRow(0);
          cell1 = row.insertCell(0);
          cell2 = row.insertCell(1);
          cell1.innerHTML = keys;
          cell2.innerHTML = values;
        })
        var rowheader = header.insertRow(0);
        var cellheader_country = rowheader.insertCell(0);
        var cellheader_mproducers = rowheader.insertCell(1);
        // Add Header
        cellheader_country.innerHTML = "<b>Country</b>"; 
        cellheader_mproducers.innerHTML= "<b>Produced</b>"
        generateMap(data)
        
    })

    function generateMap(data){
      // The svg
      const svg = d3.select("svg"),
        width = +svg.attr("width"),
        height = +svg.attr("height");
      
      // Map and projection
      const path = d3.geoPath();
      const projection = d3.geoMercator()
        .scale(70)
        .center([0,20])
        .translate([width / 2, height / 2]);
      
      // Data and color scale
      const colorScale = d3.scaleThreshold()
        .domain([10, 20, 50, 100, 200,500,1000,10000,15000])
        .range(d3.schemeBlues[7]);
  
      // Load external data and boot
      Promise.all([
      d3.json("world.geojson"),data]).then(function(loadData){
          let topo = loadData[0]
          console.log(topo)
          let mouseOver = function(event,d) {
              console.log(d.total)
              console.log(d.properties.name)
              d3.selectAll(".Country")
              .transition()
              .duration(200)
              .style("opacity", .5)
              d3.select(this)
              .transition()
              .duration(200)
              .style("opacity", 1)
              .style("stroke", "black")
          }
    
          let mouseLeave = function(d) {
            d3.selectAll(".Country")
              .transition()
              .duration(200)
              .style("opacity", .8)
            d3.select(this)
              .transition()
              .duration(200)
              .style("stroke", "transparent")
          }
        
          // Draw the map
          svg.append("g")
            .selectAll("path")
            .data(topo.features)
            .enter()
            .append("path")
              // draw each country
              .attr("d", d3.geoPath()
                .projection(projection)
              )
              // set the color of each country
              .attr("fill", function (d) {
                d.total = data.get(d.properties.name) || 0;
                return colorScale(d.total);
              })
              .style("stroke", "transparent")
              .attr("class", function(d){ return "Country" } )
              .style("opacity", .8)
              .on("mouseover", mouseOver )
              .on("mouseleave", mouseLeave )
          

        })
    }
    </script>